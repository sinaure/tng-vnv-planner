{
    "basePath": "/",
    "definitions": {
        "Login": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "Login",
            "type": "object"
        },
        "NetworkService": {
            "properties": {
                "nsd": {
                    "type": "object"
                },
                "package_id": {
                    "type": "string"
                },
                "service_platforms": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "status": {
                    "type": "string"
                },
                "testing_tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "title": "NetworkService",
            "type": "object"
        },
        "Session": {
            "properties": {
                "session_began_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/Token"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "Session",
            "type": "object"
        },
        "Test": {
            "properties": {
                "confirm_required": {
                    "type": "string"
                },
                "confirmed": {
                    "type": "string"
                },
                "package_id": {
                    "type": "string"
                },
                "service_platforms": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "testd": {
                    "type": "object"
                },
                "testing_tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "title": "Test",
            "type": "object"
        },
        "TestPlanCallback": {
            "properties": {
                "event_actor": {
                    "allowEmptyValue": false,
                    "description": "Event Actor",
                    "example": "Curator, Executor",
                    "type": "string"
                },
                "exception": {
                    "allowEmptyValue": false,
                    "description": "Test Plan Exception message",
                    "example": "run time exception",
                    "type": "string"
                },
                "status": {
                    "allowEmptyValue": false,
                    "description": "Test Plan Status",
                    "example": "STARTING, COMPLETED, CANCELLING, CANCELLED, ERROR",
                    "type": "string"
                },
                "test_plan_repository": {
                    "allowEmptyValue": false,
                    "description": "Test Plan Repository URI",
                    "example": "tng-cat, catalog, or xx.xx",
                    "type": "string"
                },
                "test_plan_uuid": {
                    "allowEmptyValue": false,
                    "description": "Test Plan uuid",
                    "type": "string"
                },
                "test_results": {
                    "allowEmptyValue": true,
                    "description": "Test Plan Result List",
                    "items": {
                        "$ref": "#/definitions/TestResult"
                    },
                    "type": "array"
                },
                "test_results_repository": {
                    "allowEmptyValue": false,
                    "description": "Test Results Repository URI",
                    "example": "tng-res, results, or xx.xx",
                    "type": "string"
                },
                "url": {
                    "allowEmptyValue": false,
                    "description": "Callback URL",
                    "example": "/test-plans/on-change",
                    "type": "string"
                }
            },
            "required": [
                "event_actor",
                "status",
                "test_plan_uuid"
            ],
            "title": "TestPlanCallback",
            "type": "object"
        },
        "TestPlanRequest": {
            "properties": {
                "last_test": {
                    "type": "boolean"
                },
                "nsd": {
                    "type": "object"
                },
                "test_plan_callbacks": {
                    "items": {
                        "$ref": "#/definitions/TestPlanCallback"
                    },
                    "type": "array"
                },
                "test_plan_uuid": {
                    "type": "string"
                },
                "testd": {
                    "type": "object"
                }
            },
            "title": "TestPlanRequest",
            "type": "object"
        },
        "TestPlanResponse": {
            "properties": {
                "exception": {
                    "allowEmptyValue": false,
                    "description": "Test Plan Exception message",
                    "example": "run time exception",
                    "type": "string"
                },
                "status": {
                    "allowEmptyValue": false,
                    "description": "Test Plan Status",
                    "example": "STARTING, COMPLETED, CANCELLING, CANCELLED, ERROR",
                    "type": "string"
                }
            },
            "title": "TestPlanResponse",
            "type": "object"
        },
        "TestResult": {
            "properties": {
                "test_result_uuid": {
                    "allowEmptyValue": false,
                    "description": "Test result uuid",
                    "type": "string"
                },
                "test_status": {
                    "allowEmptyValue": false,
                    "description": "Test Plan Status",
                    "example": "STARTING, COMPLETED, CANCELLING, CANCELLED, ERROR",
                    "type": "string"
                },
                "test_uuid": {
                    "allowEmptyValue": false,
                    "description": "Test uuid",
                    "type": "string"
                }
            },
            "required": [
                "test_result_uuid",
                "test_status",
                "test_uuid"
            ],
            "title": "TestResult",
            "type": "object"
        },
        "Token": {
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "title": "Token",
            "type": "object"
        }
    },
    "host": "tng-vnv-planner:6100",
    "info": {
        "description": "An H2020 5GTANGO project",
        "license": {
            "name": "Apache License 2.0",
            "url": "https://github.com/sonata-nfv/tng-vnv-planner/blob/master/LICENSE"
        },
        "termsOfService": "https://5gtango.eu/",
        "title": "tng-vnv-planner Dependencies' API",
        "version": "0.0.1"
    },
    "paths": {
        "/mock/curator/ping": {
            "get": {
                "operationId": "pingMeUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "pingMe",
                "tags": [
                    "curator-mock"
                ]
            }
        },
        "/mock/curator/test-preparations": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "curateTestPlanUsingPOST",
                "parameters": [
                    {
                        "description": "testPlanRequest",
                        "in": "body",
                        "name": "testPlanRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TestPlanRequest"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TestPlanResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "curateTestPlan",
                "tags": [
                    "curator-mock"
                ]
            }
        },
        "/mock/curator/test-preparations/{testPlanUuid}": {
            "delete": {
                "operationId": "deleteTestPlanUsingDELETE_1",
                "parameters": [
                    {
                        "description": "testPlanUuid",
                        "in": "path",
                        "name": "testPlanUuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "summary": "deleteTestPlan",
                "tags": [
                    "curator-mock"
                ]
            }
        },
        "/mock/gk/packages": {
            "get": {
                "operationId": "findPackagesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "findPackages",
                "tags": [
                    "catalogue-mock"
                ]
            }
        },
        "/mock/gk/packages/{packageId}": {
            "get": {
                "operationId": "loadPackageMetadataUsingGET",
                "parameters": [
                    {
                        "description": "packageId",
                        "in": "path",
                        "name": "packageId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "loadPackageMetadata",
                "tags": [
                    "catalogue-mock"
                ]
            }
        },
        "/mock/gk/services": {
            "get": {
                "operationId": "findServicesUsingGET",
                "parameters": [
                    {
                        "description": "testing_tag",
                        "in": "query",
                        "name": "testing_tag",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/NetworkService"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "findServices",
                "tags": [
                    "catalogue-mock"
                ]
            }
        },
        "/mock/gk/services/{uuid}": {
            "get": {
                "operationId": "findServiceUsingGET",
                "parameters": [
                    {
                        "description": "uuid",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "findService",
                "tags": [
                    "catalogue-mock"
                ]
            }
        },
        "/mock/gk/sessions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createSessionUsingPOST",
                "parameters": [
                    {
                        "description": "login",
                        "in": "body",
                        "name": "login",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Session"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "createSession",
                "tags": [
                    "session-mock"
                ]
            }
        },
        "/mock/gk/tests/descriptors": {
            "get": {
                "operationId": "findTestsUsingGET",
                "parameters": [
                    {
                        "description": "test_tag",
                        "in": "query",
                        "name": "test_tag",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Test"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "findTests",
                "tags": [
                    "catalogue-mock"
                ]
            }
        },
        "/mock/gk/tests/descriptors/{uuid}": {
            "get": {
                "operationId": "findTestUsingGET",
                "parameters": [
                    {
                        "description": "uuid",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "findTest",
                "tags": [
                    "catalogue-mock"
                ]
            }
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Catalogue Mock",
            "name": "catalogue-mock"
        },
        {
            "description": "Curator Mock",
            "name": "curator-mock"
        },
        {
            "description": "Session Mock",
            "name": "session-mock"
        }
    ]
}